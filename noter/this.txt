https://medium.com/quick-code/understanding-the-this-keyword-in-javascript-cb76d4c7c5e8

Javascript:
    By default, “this” refers to global object which is global in case of NodeJS and window object in case of browser
    When a method is called as a property of object, then “this” refers to the parent object
    When a function is called with “new” operator then “this” refers to the newly created instance.
    When a function is called using call and apply method then “this” refers to the value passed as first argument of call or apply method.



Java: 
Keyword 'THIS' in Java is a reference variable that refers to the current object. 
It can be used to refer current class instance variable. It can be used to invoke 
or initiate current class constructor.
Keyword 'this' i java er en variable der refererer til det objekt man opererer med lige nu. 

How is the 'this' keyword of javascript is different from 'this' keyword of java? practical example 

Example javascript :
var counter = {
  val: 0,
  increment: function () {
    this.val += 1;
  }
};
counter.increment();
console.log(counter.val); // 1
counter['increment']();
console.log(counter.val); // 2

example java:

 public Rectangle(int x, int y, int width, int height) {
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
    }


    
   the 'this' key word in both case refer to the current object
    In javascript, this can also refer to an element triggering an event.
    In ECMAScript, this is set either by the call or using bind. It can reference any object and be different 
    for each call. In addition, in strict mode, this can be set to any value by the call, including undefined.

 Javascript call(), apply() and bind()
    